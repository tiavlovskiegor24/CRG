# extract anti-diagonals of sparse matrix 
import numpy as np

def normalise_diags(H):
    n = H.shape[0]
    diags = np.zeros((n,1))
    for i in xrange(n):
            diags[i] = H[(np.arange(i,n),np.arange(n-i))].sum()/(n-i)
            mask = np.asarray(H[(np.arange(i,n),np.arange(n-i))] > 0).ravel()
            if diags[i] > 0:
                H[(np.arange(i,n)[mask],np.arange(n-i)[mask])] = \
                    H[(np.arange(i,n)[mask],np.arange(n-i)[mask])]/diags[i]#/mask.sum()
                if i > 0: 
                    H[(np.arange(n-i)[mask],np.arange(i,n)[mask])] = \
                        H[(np.arange(n-i)[mask],np.arange(i,n)[mask])]/diags[i]
            
    return H
